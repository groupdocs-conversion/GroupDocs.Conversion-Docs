# Build & deploy documentation

name: Build & Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
  # Triggers the workflow on pull
  pull_request:
  # Run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Submodule update
        run: |
          git submodule update --init --recursive
          git submodule foreach git pull origin master

      - name: Install Hugo
        run: |
          curl -LO https://github.com/gohugoio/hugo/releases/download/v0.67.1/hugo_extended_0.67.1_Linux-64bit.deb
          sudo dpkg -i hugo_extended_0.67.1_Linux-64bit.deb
          
      - name: Run and build Hugo
        run: |
          mkdir -p common/content/conversion
          cp -r java common/content/conversion
          cp -r net common/content/conversion
          cp _index.md common/content/conversion
          hugo --source common --minify --config config.toml,ignore-total-config.toml
          #cd common/public
          #zip -r -q conversion.zip conversion

      # Upload artifacts to be used in other jobs
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hugo-output
          path: common/public
          retention-days: 1

  # Deploy job        
  deploy:
    runs-on: ubuntu-latest
    # Run after build job
    needs: build
    # Run only when pushed to master and only when build job is complete/succeed
    if: success() && github.ref == 'refs/heads/master'
    steps:
      # Restore artifacts from build job
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: hugo-output
      
      # Deploy sitemap
      - name: Deploy sitemap
        run: |
          ls -l common
        #uses: nogsantos/scp-deploy@master
        #with:
          #src: product-sitemap.xml
          #host: ${{ secrets.DOCS_SSH_HOST }}
          #remote: ${{ secrets.DOCS_SSH_DIR }}/sitemaps/test.xml
          #user: ${{ secrets.DOCS_SSH_USER }}
          #key: ${{ secrets.DOCS_SSH_KEY }}
